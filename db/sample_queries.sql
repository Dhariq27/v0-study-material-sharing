-- Sample SQL Queries for Study Material System

-- 1. Query to fetch materials by subject and semester with pagination
-- Example: Get materials for Computer Science, Semester 1, page 1 (10 items per page)
SELECT * FROM (
    SELECT MATERIAL_ID, TITLE, SUBJECT, SEMESTER, FILE_NAME, UPLOAD_DATE, DOWNLOAD_COUNT,
           ROW_NUMBER() OVER (ORDER BY UPLOAD_DATE DESC) AS RN
    FROM MATERIALS
    WHERE SUBJECT = 'Computer Science' AND SEMESTER = 'Semester 1'
)
WHERE RN BETWEEN 1 AND 10;

-- 2. Query to count participants per event (Complex example with JOIN + aggregation)
SELECT 
    E.EVENT_ID,
    E.EVENT_NAME,
    E.EVENT_DATE,
    COUNT(ER.REGISTRATION_ID) AS PARTICIPANT_COUNT,
    U.FULL_NAME AS CREATED_BY
FROM EVENTS E
LEFT JOIN EVENT_REGISTRATIONS ER ON E.EVENT_ID = ER.EVENT_ID
LEFT JOIN USERS U ON E.CREATED_BY = U.USER_ID
GROUP BY E.EVENT_ID, E.EVENT_NAME, E.EVENT_DATE, U.FULL_NAME
ORDER BY E.EVENT_DATE DESC;

-- 3. Query to list announcements in last 30 days
SELECT ANNOUNCEMENT_ID, TITLE, CONTENT, POSTED_BY, POST_DATE
FROM ANNOUNCEMENTS
WHERE POST_DATE >= TRUNC(SYSDATE) - 30
ORDER BY POST_DATE DESC;

-- 4. Query to get materials uploaded by a specific faculty member
SELECT M.MATERIAL_ID, M.TITLE, M.SUBJECT, M.SEMESTER, M.DOWNLOAD_COUNT, M.UPLOAD_DATE
FROM MATERIALS M
WHERE M.UPLOADED_BY = 2
ORDER BY M.UPLOAD_DATE DESC;

-- 5. Query to get most downloaded materials
SELECT MATERIAL_ID, TITLE, SUBJECT, DOWNLOAD_COUNT
FROM MATERIALS
ORDER BY DOWNLOAD_COUNT DESC
FETCH FIRST 10 ROWS ONLY;

-- 6. Query to get all students registered for a specific event
SELECT U.USER_ID, U.USERNAME, U.FULL_NAME, U.EMAIL, ER.REGISTERED_AT
FROM USERS U
JOIN EVENT_REGISTRATIONS ER ON U.USER_ID = ER.USER_ID
WHERE ER.EVENT_ID = 1
ORDER BY ER.REGISTERED_AT DESC;

-- 7. Query to get materials by subject with download statistics
SELECT 
    SUBJECT,
    COUNT(*) AS TOTAL_MATERIALS,
    SUM(DOWNLOAD_COUNT) AS TOTAL_DOWNLOADS,
    AVG(DOWNLOAD_COUNT) AS AVG_DOWNLOADS
FROM MATERIALS
GROUP BY SUBJECT
ORDER BY TOTAL_DOWNLOADS DESC;

-- 8. Query to get user activity (materials uploaded and events created)
SELECT 
    U.USER_ID,
    U.USERNAME,
    U.FULL_NAME,
    COUNT(DISTINCT M.MATERIAL_ID) AS MATERIALS_UPLOADED,
    COUNT(DISTINCT E.EVENT_ID) AS EVENTS_CREATED
FROM USERS U
LEFT JOIN MATERIALS M ON U.USER_ID = M.UPLOADED_BY
LEFT JOIN EVENTS E ON U.USER_ID = E.CREATED_BY
WHERE U.ROLE IN ('FACULTY', 'ADMIN')
GROUP BY U.USER_ID, U.USERNAME, U.FULL_NAME
ORDER BY MATERIALS_UPLOADED DESC;
